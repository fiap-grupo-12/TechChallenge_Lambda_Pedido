name: 'Terraform'

on:
  push:
    branches: [ "release", "main", "feature/*", "release/*" ]

permissions:
  pull-requests: read

jobs:
  Build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Test
        run: dotnet test --collect:"XPlat Code Coverage" --results-directory coverage

      - name: Convertendo coverage report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator -reports:coverage/**/coverage.cobertura.xml -targetdir:coverage/report -reporttypes:Cobertura

      - name: Publish test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: coverage/report

  SonarCloud:
    needs: Build
    uses: ./.github/workflows/sonar.yaml
    secrets: 
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Publish
        run: dotnet publish -c Release -o out

      - name: Zip published output
        run: zip -r lambda_pedido_function.zip out/*

            
      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verificando se bucket está criado
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
            BUCKET_NAME="code-lambdas-functions"
            REGION="us-east-1"

            if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
              echo "Bucket não existe. Criando bucket..."
              aws s3api create-bucket --bucket "$BUCKET_NAME"
            else
              echo "Bucket validado. Processo de upload."
            fi

      - name: Upload to S3
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: aws s3 cp lambda_pedido_function.zip s3://code-lambdas-functions/

  CreateLambda: 
    needs: 'SonarCloud'
    runs-on: ubuntu-latest 
    defaults:
      run:
        working-directory: ./infra
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Apply Terraform
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve