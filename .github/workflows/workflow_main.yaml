name: 'Terraform'

on:
  push:
    branches: [ "release", "main" ]
  pull_request:
    branches: [ "release", "main" ]

permissions:
  contents: read

jobs:
  Build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Test
        run: dotnet test

      - name: Publish
        run: dotnet publish -c Release -o out

      - name: Zip published output
        run: zip -r lambda_pedido_function.zip out/*

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload to S3
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: aws s3 cp lambda_pedido_function.zip s3://code-lambdas-functions/

  SonarCloud:
    needs: Build
    uses: ./.github/workflows/sonar.yaml
    secrets: 
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  CreateLambda: 
    needs: 'SonarCloud'
    runs-on: ubuntu-latest 
    defaults:
      run:
        working-directory: ./infra
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Apply Terraform
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve    

    
